FULL_FRAME_SIZE = (1164, 874)
W, H = FULL_FRAME_SIZE[0], FULL_FRAME_SIZE[1]
eon_focal_length = FOCAL = 910.0
cv2.COLOR_BGR2YUV_I420

---JLL   xxxxxxxxxx augmented_img.shape (384, 512) in camera.py ???

---JLL   ret                  =  True
---JLL   frame.shape          =  (874, 1164, 3)   # RGB
---JLL   img_yuv.shape        =  (1311, 1164)     # 874*3//2 = 1311
---JLL   img_yuv.reshape      =  (1311, 1164)     # 1311Ã—1164 = 1,526,004
---JLL   imgs.shape           =  (20, 1311, 1164)
---JLL   imgs_med_model.shape =  (20, 384, 512)
---JLL   np.array(imgs_med_model).shape              =  (20, 384, 512)     # 384 = 3 RGB Channels x 128?
---JLL   frame_tensors.shape                         =  (20, 6, 128, 256)  # /128.0?
---JLL   frame_tensors[i:i+2].shape                  =  (2, 6, 128, 256)
---JLL   np.vstack(frame_tensors[i:i+2]).shape       =  (12, 128, 256)
---JLL   np.vstack(frame_tensors[i:i+2])[None].shape =  (1, 12, 128, 256)
---JLL   inputs[ 0 ].shape =  (1, 12, 128, 256)   # 12 = 2 frames x 6 channels (YUV_I420: Y=4, U=1, V=1) Wrong?!
---JLL   inputs[ 1 ].shape =  (1, 8)              # output_size=(512,256)/2 => 128, 256 => (20, 384=128x3?, 512)
---JLL   inputs[ 2 ].shape =  (1, 512)            # 12 = 2 frames x 3 RGB channels x 3 (128)
---JLL   outs[ 0  ].shape =  (1, 385)             
---JLL   outs[ 1  ].shape =  (1, 386)
---JLL   outs[ 2  ].shape =  (1, 386)
---JLL   outs[ 3  ].shape =  (1, 58)
---JLL   outs[ 4  ].shape =  (1, 200)
---JLL   outs[ 5  ].shape =  (1, 200)
---JLL   outs[ 6  ].shape =  (1, 200)
---JLL   outs[ 7  ].shape =  (1, 4)
---JLL   outs[ 8  ].shape =  (1, 32)
---JLL   outs[ 9  ].shape =  (1, 12)
---JLL   outs[ 10 ].shape =  (1, 512)
---JLL   parsed[ path             ].shape =  (1, 192)
---JLL   parsed[ path_stds        ].shape =  (1, 192)
---JLL   parsed[ lll              ].shape =  (1, 192)
---JLL   parsed[ lll_prob         ].shape =  (1,)
---JLL   parsed[ lll_stds         ].shape =  (1, 192)
---JLL   parsed[ rll              ].shape =  (1, 192)
---JLL   parsed[ rll_prob         ].shape =  (1,)
---JLL   parsed[ rll_stds         ].shape =  (1, 192)
---JLL   parsed[ lead_xyva        ].shape =  (1, 4)
---JLL   parsed[ lead_xyva_std    ].shape =  (1, 4)
---JLL   parsed[ lead_prob        ].shape =  (1,)
---JLL   parsed[ lead_xyva_2s     ].shape =  (1, 4)
---JLL   parsed[ lead_xyva_std_2s ].shape =  (1, 4)
---JLL   parsed[ lead_prob_2s     ].shape =  (1,)
---JLL   parsed[ lead_all         ].shape =  (1, 58)
---JLL   parsed[ meta             ].shape =  (1, 32)
---JLL   parsed[ desire           ].shape =  (1, 12)
---JLL   parsed[ desire_state     ].shape =  (1, 4)
---JLL   parsed[ long_x           ].shape =  (1, 200)
---JLL   parsed[ long_v           ].shape =  (1, 200)
---JLL   parsed[ long_a           ].shape =  (1, 200)
---JLL   parsed[ trans            ].shape =  (1, 3)
---JLL   parsed[ trans_std        ].shape =  (1, 3)
---JLL   parsed[ rot              ].shape =  (1, 3)
---JLL   parsed[ rot_std          ].shape =  (1, 3)
---JLL   state.shape            =  (1, 512)
---JLL   pose.shape             =  (1, 12)
---JLL   frame.cv2.resize.shape =  (420, 640, 3)
Press ENTER twice to close all windows ...
Press ENTER to exit ...

modeldata.h (not OP079)
constexpr int MODEL_PATH_DISTANCE = 192;
constexpr int  TRAJECTORY_SIZE = 33;
constexpr float MIN_DRAW_DISTANCE = 10.0;
constexpr float MAX_DRAW_DISTANCE = 100.0;
constexpr int POLYFIT_DEGREE = 4;
constexpr int SPEED_PERCENTILES = 10;
constexpr int DESIRE_PRED_SIZE = 32;
constexpr int OTHER_META_SIZE = 4;

driving.cc (not OP079)
constexpr int PLAN_MHP_N = 5;
constexpr int PLAN_MHP_COLUMNS = 30;
constexpr int PLAN_MHP_VALS = 30*33;
constexpr int PLAN_MHP_SELECTION = 1;
constexpr int PLAN_MHP_GROUP_SIZE =  (2*PLAN_MHP_VALS + PLAN_MHP_SELECTION); = 2*990 + 1 = 1981
constexpr int LEAD_MHP_N = 5;
constexpr int LEAD_MHP_VALS = 4;
constexpr int LEAD_MHP_SELECTION = 3;
constexpr int LEAD_MHP_GROUP_SIZE = (2*LEAD_MHP_VALS + LEAD_MHP_SELECTION); = 2*4 + 3 = 11
constexpr int POSE_SIZE = 12;

constexpr int PLAN_IDX = 0;
constexpr int LL_IDX = PLAN_IDX + PLAN_MHP_N*PLAN_MHP_GROUP_SIZE; = 0 + 5*1981 = 9905
constexpr int LL_PROB_IDX = LL_IDX + 4*2*2*33;                    = 9905 + 528 = 10433
constexpr int RE_IDX = LL_PROB_IDX + 4;                           = 10433 + 4 = 10437
constexpr int LEAD_IDX = RE_IDX + 2*2*2*33;                       = 10437 + 4 = 10437
constexpr int LEAD_PROB_IDX = LEAD_IDX + LEAD_MHP_N*(LEAD_MHP_GROUP_SIZE);
constexpr int DESIRE_STATE_IDX = LEAD_PROB_IDX + 3;
constexpr int META_IDX = DESIRE_STATE_IDX + DESIRE_LEN;
constexpr int POSE_IDX = META_IDX + OTHER_META_SIZE + DESIRE_PRED_SIZE; = 
constexpr int OUTPUT_SIZE =  POSE_IDX + POSE_SIZE; = 

